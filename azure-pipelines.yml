# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  name: 'webgoat-agent'



steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task:                  CopyPublishBuildArtifacts@1
  inputs:
    Contents:           '**/target/*.jar'
    ArtifactName:       'groot-artifact'
    ArtifactType:       'Container'
    TargetPath:         "$(Build.ArtifactStagingDirectory)"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish:      '$(Build.ArtifactStagingDirectory)'
    ArtifactName:       'groot-artifact'
    publishLocation:    'Container' # means upload artifact in azure pipelines#

- task: DownloadBuildArtifacts@1
  displayName:  "successfully downloaded"
  inputs:
    buildType: 'current'
    downloadType: 'single'
    downloadPath: '$(pipeline.workspace)'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(02dd8a70-8b78-44e2-bb9e-56d6e1188f39)'
    appType: 'webAppLinux'
    WebAppName: 'webgoattest'
    packageForLinux: '$(Pipeline.Workspace)/webgoat_artifact/**/*.jar'
    RuntimeStack: 'JAVA|21-java21'
